//leetcode :https://leetcode.com/problems/number-of-people-aware-of-a-secret/
class Solution {
    int mod=1000000007;
    public int peopleAwareOfSecret(int n, int delay, int forget)
    {
        return  numberofpeople(1,n,delay,forget);
    }
    public int numberofpeople(int i,int target,int delay,int forget)
    {
        int ans=0;
        for(int j=i+delay;j<=i+forget;j++)
        {
           ans +=numberofpeople(j,target,delay,forget);
        }
    }
}
//     int mod=1000000007;
//     public int peopleAwareOfSecret(int n, int delay, int forget)
//     {
//       int[] arr=new int[2005];
//       Arrays.fill(arr,0);
//       arr[1]=1;
//       for(int i=1;i<=n;i++)
//       {
//           for(int j=i+delay;j<forget+i;j++)
//           {
//               arr[j]=(arr[j]+arr[i])%mod;
//           }
//       }
//       int ans=0;
//       int k=Math.max(1,n-forget+1);
//       for(int l=Math.max(1,n-forget+1);l<=n;l++)
//       {
//           ans=(ans+arr[l])%mod;
//       }

//       return ans;



//     }

// }